{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory Name",
			"defaultValue": "aqadftutorialdatafactory"
		},
		"AQAzureStorageLinkedService_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AQAzureStorageLinkedService'"
		},
		"AzureSqlDatabase2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase2'"
		},
		"TestAzureSqlDatabase3_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'TestAzureSqlDatabase3'"
		},
		"VelSIT_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'VelSIT'"
		},
		"Blacklist_Blob_Test_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "BlacklistTest"
		},
		"Blacklist_Blob_Test_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "adftutorial/fromonprem"
		},
		"Destination_Dataset_BLOB_VelSIT_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": ""
		},
		"Destination_Dataset_BLOB_VelSIT_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "adftutorial/fromonprem"
		},
		"SourceDatasetBlob_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "\"GENTRACK_VIEW\".\"BI_HUB_GENARGCATEGORY\".txt"
		},
		"SourceDatasetBlob_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "adftutorial/fromonprem"
		},
		"TestAzureBlob1_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "\"GENTRACK_VIEW\".\"BI_HUB_GENARGCATEGORY\".txt"
		},
		"TestAzureBlob1_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "adftutorial/fromonprem"
		},
		"AQintegrationRuntime_properties_typeProperties_ssisProperties_catalogInfo_catalogServerEndpoint": {
			"type": "string",
			"defaultValue": "aqeastusserver1.database.windows.net"
		},
		"AQintegrationRuntime_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminUserName": {
			"type": "string",
			"defaultValue": "AQADMIN"
		},
		"AQintegrationRuntime_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminPassword": {
			"type": "secureString"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/BlackList_to_BlobTest')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy Blacklist to Azure Blob",
				"activities": [
					{
						"name": "Blacklist_BLOBTest",
						"description": "Copy Blacklist Data from Velocity to Azure BLOB",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "SELECT CUSTOMER_NO, 'Blank_name' AS NAME, PRIMARY_PHONE, SECONDARY_PHONE, MOBILE_PHONE, EMAIL\nFROM FLUX_NNC_VIEW"
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "BlacklistTest",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Blacklist_Blob_Test",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/BlacklistTest')]",
				"[concat(variables('factoryId'), '/datasets/Blacklist_Blob_Test')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Blacklist_Blob_to_SQLTest')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Blacklist_Blob_to_SQLTest",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": true
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": 10000,
								"preCopyScript": "truncate table LAND_BLACKLIST_TEST\n\n-- Get next batch ID\n    INSERT INTO NEXT_BATCH (PROCESS, BATCH_DATE)\n    VALUES ('BlackListTest', GETDATE())",
								"sqlWriterStoredProcedureName": "[concat('[', 'dbo].[spLAND_BLACKLIST]')]",
								"sqlWriterTableType": "dbo.LAND_BLACKLIST_TEST"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"CUSTOMER_NO": "CUSTOMER_NO",
									"NAME": "NAME",
									"PRIMARY_PHONE": "PRIMARY_PHONE",
									"SECONDARY_PHONE": "SECONDARY_PHONE",
									"MOBILE_PHONE": "MOBILE_PHONE",
									"EMAIL": "EMAIL"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Blacklist_Blob_Test",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "LAND_BLACKLIST_TEST",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "GetBatch",
						"description": "Get the latest Batch_id",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Blacklist_Blob_to_SQLTest",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "select MAX(BATCH_ID) AS Batch_ID\nfrom NEXT_BATCH\nWHERE Process = 'BlackListTest'"
							},
							"dataset": {
								"referenceName": "LAND_BLACKLIST_TEST",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Exe_GM_BlackList",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "GetBatch",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[concat('[', 'dbo].[SCDGlobalMerge]')]",
							"storedProcedureParameters": {
								"Table": {
									"value": "STG_BLACKLIST_TEST",
									"type": "String"
								},
								"batch_id": {
									"value": {
										"value": "@activity('GetBatch').output.firstRow.Batch_ID",
										"type": "Expression"
									},
									"type": "INT"
								},
								"RowcountInsertFact": {
									"value": "0",
									"type": "INT"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase2",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exe_GM_Phone",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exe_GM_BlackList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[concat('[', 'dbo].[SCDGlobalMerge]')]",
							"storedProcedureParameters": {
								"Table": {
									"value": "STG_BLACKLIST_PHONE_TEST",
									"type": "String"
								},
								"batch_id": {
									"value": {
										"value": "@activity('GetBatch').output.firstRow.Batch_ID",
										"type": "Expression"
									},
									"type": "INT"
								},
								"RowcountInsertFact": {
									"value": "0",
									"type": "INT"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase2",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Exe_GM_EMail",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Exe_GM_BlackList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[concat('[', 'dbo].[SCDGlobalMerge]')]",
							"storedProcedureParameters": {
								"Table": {
									"value": "STG_BLACKLIST_EMAIL_TEST",
									"type": "String"
								},
								"batch_id": {
									"value": {
										"value": "@activity('GetBatch').output.firstRow.Batch_ID",
										"type": "Expression"
									},
									"type": "INT"
								},
								"RowcountInsertFact": {
									"value": "0",
									"type": "INT"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase2",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Blacklist_Blob_Test')]",
				"[concat(variables('factoryId'), '/datasets/LAND_BLACKLIST_TEST')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MyPlayPipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckValidBatch",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GetBatch",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('GetBatch').output.firstRow.batch_id,-1)\n\n",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "AQtest_Success",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[concat('[', 'dbo].[aqtestproc]')]",
										"storedProcedureParameters": {
											"p_wherefrom": {
												"value": {
													"value": "@concat('Run Batch: ',pipeline().parameters.Batch_ID, ' completed successfully')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase2",
										"type": "LinkedServiceReference"
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "AQTest_Fail",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[concat('[', 'dbo].[aqtestproc]')]",
										"storedProcedureParameters": {
											"p_wherefrom": {
												"value": {
													"value": "@concat('Run Batch: ',pipeline().parameters.Batch_ID, ' FAILED!!!!')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase2",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "GetBatch",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "select max(a.batch_id) as batch_id from (\n    select batch_id\n    from NEXT_BATCH\n    where PROCESS = 'BlackListTest'\n    and batch_id = @{pipeline().parameters.Batch_ID}\n    union select -1) a\n",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "TESTAzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"parameters": {
					"Batch_ID": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TESTAzureSqlTable1')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MyPlayPipelinerenametest')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Test",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[concat('[', 'dbo].[aqtestproc]')]",
							"storedProcedureParameters": {
								"p_wherefrom": {
									"value": {
										"value": "@pipeline().parameters.whendone",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase2",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"whendone": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TestCheckVelocityDate')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get_Max_GENARGCATEGORY",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select max(RPT_LAST_UPDATED) AS LAST_UPDATED\nfrom bi_hub_genargcategory"
							},
							"dataset": {
								"referenceName": "BlacklistTest",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Check_RPT_LAST_UPDATED",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get_Max_GENARGCATEGORY",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@less(activity('Get_Max_GENARGCATEGORY').output.firstRow.LAST_UPDATED, adddays(utcnow(),-2))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Wait1",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Call_VelSIT_to_Blob",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "BlackList_to_BlobTest",
											"type": "PipelineReference"
										}
									}
								}
							]
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/BlacklistTest')]",
				"[concat(variables('factoryId'), '/pipelines/BlackList_to_BlobTest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TestGetMetadata')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "SourceDatasetBlob",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"lastModified",
								"size"
							]
						}
					},
					{
						"name": "Test Last Modified",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@less(activity('Get Metadata1').output.lastModified, adddays(utcnow(),-2))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Wait1",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 10
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Call VelSit to Blob",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "BlackList_to_BlobTest",
											"type": "PipelineReference"
										}
									}
								}
							]
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDatasetBlob')]",
				"[concat(variables('factoryId'), '/pipelines/BlackList_to_BlobTest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VelSIT_to_Blob_Test')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyVelSITtoAzure",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource"
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "VelSIT_BI_HUB_GENARGCATEGORY",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Destination_Dataset_BLOB_VelSIT",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/VelSIT_BI_HUB_GENARGCATEGORY')]",
				"[concat(variables('factoryId'), '/datasets/Destination_Dataset_BLOB_VelSIT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "TEST_COPY_AtoA",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource"
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": 10000
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"PAYMENT_ARRANGEMENT_CODE": "PAYMENT_ARRANGEMENT_CODE",
									"PAYMENT_ARRANGEMENT_DESC": "PAYMENT_ARRANGEMENT_DESC",
									"PAYMENT_ARRANGEMENT_GROUP": "PAYMENT_ARRANGEMENT_GROUP",
									"PAYMENT_ARRANGEMENT_CATEGORY": "PAYMENT_ARRANGEMENT_CATEGORY",
									"RPT_LAST_UPDATED": "RPT_LAST_UPDATED"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TESTAzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TestAzureSqlTable2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TESTAzureSqlTable1')]",
				"[concat(variables('factoryId'), '/datasets/TestAzureSqlTable2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "TEST_COPY_AtoA",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": true
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": 10000,
								"preCopyScript": "exec dbo.truncate_bi_hub_genargcategory2"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"Prop_0": "PAYMENT_ARRANGEMENT_CODE",
									"Prop_1": "PAYMENT_ARRANGEMENT_DESC",
									"Prop_2": "PAYMENT_ARRANGEMENT_GROUP",
									"Prop_3": "PAYMENT_ARRANGEMENT_CATEGORY",
									"Prop_4": "RPT_LAST_UPDATED"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TestAzureBlob1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TestAzureSqlTable2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TestAzureBlob1')]",
				"[concat(variables('factoryId'), '/datasets/TestAzureSqlTable2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "TEST_COPY_AtoA",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource"
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": 10000
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"PAYMENT_ARRANGEMENT_CODE": "PAYMENT_ARRANGEMENT_CODE",
									"PAYMENT_ARRANGEMENT_DESC": "PAYMENT_ARRANGEMENT_DESC",
									"PAYMENT_ARRANGEMENT_GROUP": "PAYMENT_ARRANGEMENT_GROUP",
									"PAYMENT_ARRANGEMENT_CATEGORY": "PAYMENT_ARRANGEMENT_CATEGORY",
									"RPT_LAST_UPDATED": "RPT_LAST_UPDATED"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "VelSIT_BI_HUB_GENARGCATEGORY",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TestAzureSqlTable2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/VelSIT_BI_HUB_GENARGCATEGORY')]",
				"[concat(variables('factoryId'), '/datasets/TestAzureSqlTable2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BlacklistTest')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Test for Blacklist",
				"linkedServiceName": {
					"referenceName": "VelSIT",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "OracleTable",
				"typeProperties": {
					"tableName": "\"GENTRACK_VIEW\".\"FLUX_NNC_VIEW\""
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VelSIT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Blacklist_Blob_Test')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AQAzureStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureBlob",
				"structure": [
					{
						"name": "CUSTOMER_NO",
						"type": "String"
					},
					{
						"name": "NAME",
						"type": "String"
					},
					{
						"name": "PRIMARY_PHONE",
						"type": "String"
					},
					{
						"name": "SECONDARY_PHONE",
						"type": "String"
					},
					{
						"name": "MOBILE_PHONE",
						"type": "String"
					},
					{
						"name": "EMAIL",
						"type": "String"
					}
				],
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": true
					},
					"fileName": "[parameters('Blacklist_Blob_Test_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('Blacklist_Blob_Test_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AQAzureStorageLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_Azure_SQL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "ICP_IDENTIFIER",
						"type": "String"
					},
					{
						"name": "METER_SERIAL_NUMBER",
						"type": "String"
					},
					{
						"name": "REGISTER_NUMBER",
						"type": "String"
					},
					{
						"name": "CONSUMPTION_READ_DATE",
						"type": "String"
					},
					{
						"name": "CONSUMPTION_KWH",
						"type": "String"
					}
				],
				"typeProperties": {
					"tableName": "[concat('[', 'dbo].[PRODDaily]')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Destination_Dataset_BLOB_VelSIT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AQAzureStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureBlob",
				"structure": [
					{
						"name": "Prop_0",
						"type": "String"
					},
					{
						"name": "Prop_1",
						"type": "String"
					},
					{
						"name": "Prop_2",
						"type": "String"
					},
					{
						"name": "Prop_3",
						"type": "String"
					},
					{
						"name": "Prop_4",
						"type": "String"
					}
				],
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"fileName": "[parameters('Destination_Dataset_BLOB_VelSIT_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('Destination_Dataset_BLOB_VelSIT_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AQAzureStorageLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LAND_BLACKLIST_TEST')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "CUSTOMER_NO",
						"type": "Int32"
					},
					{
						"name": "NAME",
						"type": "String"
					},
					{
						"name": "PRIMARY_PHONE",
						"type": "String"
					},
					{
						"name": "SECONDARY_PHONE",
						"type": "String"
					},
					{
						"name": "MOBILE_PHONE",
						"type": "String"
					},
					{
						"name": "EMAIL",
						"type": "String"
					}
				],
				"typeProperties": {
					"tableName": "LAND_BLACKLIST_TEST"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDatasetBlob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AQAzureStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"fileName": "[parameters('SourceDatasetBlob_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('SourceDatasetBlob_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AQAzureStorageLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TESTAzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TestAzureSqlDatabase3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "PAYMENT_ARRANGEMENT_CODE",
						"type": "String"
					},
					{
						"name": "PAYMENT_ARRANGEMENT_DESC",
						"type": "String"
					},
					{
						"name": "PAYMENT_ARRANGEMENT_GROUP",
						"type": "String"
					},
					{
						"name": "PAYMENT_ARRANGEMENT_CATEGORY",
						"type": "String"
					},
					{
						"name": "RPT_LAST_UPDATED",
						"type": "DateTime"
					}
				],
				"typeProperties": {
					"tableName": "[concat('[', 'dbo].[BI_HUB_GENARGCATEGORY]')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TestAzureSqlDatabase3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TestAzureBlob1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AQAzureStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureBlob",
				"structure": [
					{
						"name": "Prop_0",
						"type": "String"
					},
					{
						"name": "Prop_1",
						"type": "String"
					},
					{
						"name": "Prop_2",
						"type": "String"
					},
					{
						"name": "Prop_3",
						"type": "String"
					},
					{
						"name": "Prop_4",
						"type": "String"
					}
				],
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"fileName": "[parameters('TestAzureBlob1_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('TestAzureBlob1_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AQAzureStorageLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TestAzureSqlTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TestAzureSqlDatabase3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "PAYMENT_ARRANGEMENT_CODE",
						"type": "String"
					},
					{
						"name": "PAYMENT_ARRANGEMENT_DESC",
						"type": "String"
					},
					{
						"name": "PAYMENT_ARRANGEMENT_GROUP",
						"type": "String"
					},
					{
						"name": "PAYMENT_ARRANGEMENT_CATEGORY",
						"type": "String"
					},
					{
						"name": "RPT_LAST_UPDATED",
						"type": "DateTime"
					}
				],
				"typeProperties": {
					"tableName": "[concat('[', 'dbo].[BI_HUB_GENARGCATEGORY2]')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TestAzureSqlDatabase3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VelSIT_BI_HUB_GENARGCATEGORY')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "BI_HUB_GENARGCATEGORY view on VelSIT",
				"linkedServiceName": {
					"referenceName": "VelSIT",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "OracleTable",
				"structure": [
					{
						"name": "PAYMENT_ARRANGEMENT_CODE",
						"type": "String"
					},
					{
						"name": "PAYMENT_ARRANGEMENT_DESC",
						"type": "String"
					},
					{
						"name": "PAYMENT_ARRANGEMENT_GROUP",
						"type": "String"
					},
					{
						"name": "PAYMENT_ARRANGEMENT_CATEGORY",
						"type": "String"
					},
					{
						"name": "RPT_LAST_UPDATED",
						"type": "DateTime"
					}
				],
				"typeProperties": {
					"tableName": "\"GENTRACK_VIEW\".\"BI_HUB_GENARGCATEGORY\""
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VelSIT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VelSIT_TEST')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Test",
				"linkedServiceName": {
					"referenceName": "VelSIT",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "OracleTable",
				"structure": [
					{
						"name": "STATUS",
						"type": "String"
					},
					{
						"name": "DESCRIPTION",
						"type": "String"
					},
					{
						"name": "STATUS_TYPE",
						"type": "String"
					},
					{
						"name": "STP_PROGRAM",
						"type": "String"
					},
					{
						"name": "INYEAR",
						"type": "String"
					},
					{
						"name": "LETCODE_CODE",
						"type": "String"
					},
					{
						"name": "MEMO_TYPE",
						"type": "String"
					},
					{
						"name": "MEMO_REVIEW",
						"type": "String"
					},
					{
						"name": "TRANSACTION_TYPE",
						"type": "String"
					},
					{
						"name": "CCSERVICEORDER_TYPE",
						"type": "String"
					},
					{
						"name": "PARAMETER_GROUP",
						"type": "String"
					}
				],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VelSIT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AQAzureStorageLinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AQAzureStorageLinkedService_connectionString')]"
				},
				"connectVia": {
					"referenceName": "azurePub",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/azurePub')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase2_connectionString')]"
				},
				"connectVia": {
					"referenceName": "azurePub",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/azurePub')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TestAzureSqlDatabase3')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('TestAzureSqlDatabase3_connectionString')]"
				},
				"connectVia": {
					"referenceName": "azurePub",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/azurePub')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VelSIT')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connection to Velocity SIT",
				"annotations": [],
				"type": "Oracle",
				"typeProperties": {
					"connectionString": "[parameters('VelSIT_connectionString')]"
				},
				"connectVia": {
					"referenceName": "integrationRuntime2",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Hourly')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Run this pipeline every hour",
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "TestGetMetadata",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 1,
						"startTime": "2018-08-22T01:12:49.781Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/TestGetMetadata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AQintegrationRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"description": "Test SSIS Integration",
				"typeProperties": {
					"computeProperties": {
						"location": "East US",
						"nodeSize": "Standard_D1_v2",
						"numberOfNodes": 2,
						"maxParallelExecutionsPerNode": 1
					},
					"ssisProperties": {
						"catalogInfo": {
							"catalogServerEndpoint": "[parameters('AQintegrationRuntime_properties_typeProperties_ssisProperties_catalogInfo_catalogServerEndpoint')]",
							"catalogAdminUserName": "[parameters('AQintegrationRuntime_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminUserName')]",
							"catalogAdminPassword": {
								"type": "SecureString",
								"value": "[parameters('AQintegrationRuntime_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminPassword')]"
							},
							"catalogPricingTier": "Basic"
						},
						"edition": "Standard",
						"licenseType": "LicenseIncluded"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/azurePub')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime2')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		}
	]
}